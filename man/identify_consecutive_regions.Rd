% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handling_consecutive_regions.R
\name{identify_consecutive_regions}
\alias{identify_consecutive_regions}
\title{Identify Consecutive Regions in Methylation Data}
\usage{
identify_consecutive_regions(regions_cpgs, ...)
}
\arguments{
\item{regions_cpgs}{A data frame or data.table containing CpG regions with `region_id`, and the location of the CpGs inside the regions, defined with `chr`, `start`, and `end` 
columns. It represents the methylation data with regions of interest, where each region is defined 
by its boundaries and associated chromosome.}

\item{...}{Additional parameters passed to the function (currently not used explicitly).}
}
\value{
A data.table with the original `regions_cpgs` data plus additional columns:
\itemize{
  \item `consecutive`: A logical column indicating whether a region is consecutive to the previous one.
  \item `prev_end`: The `end` position of the previous region, shifted for each row.
  \item `first_true_after_false`: A logical column marking the first CpG of a region following a consecutive gap.
}
}
\description{
This function identifies consecutive regions in methylation data by comparing the region boundaries and chromosomes. 
It determines whether the end of a region is immediately followed by the start of another region on the same chromosome, 
thereby identifying consecutive regions. The function also identifies gaps between consecutive CpGs and marks the 
first CpG of the following region after a consecutive sequence.
}
\details{
This function processes the input `regions_cpgs` data and identifies consecutive regions based on the following rules:
- A region is considered consecutive if the end of one region is immediately followed by the start of the next region 
  on the same chromosome.
- The function then identifies gaps between CpGs from the last region to the first CpG of the consecutive region.
- It also marks the first CpG of a consecutive region after a gap as `first_true_after_false`.

The result is a `data.table` with updated information regarding consecutive regions, gap identification, and a logical 
indicator for each region's consecutive status.
}
