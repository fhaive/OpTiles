% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handling_consecutive_regions.R
\name{adjacent_regions_investigation}
\alias{adjacent_regions_investigation}
\title{Investigate Adjacent Regions in Methylation Data}
\usage{
adjacent_regions_investigation(meth, tiles)
}
\arguments{
\item{meth}{A data frame or data.table containing filtered methylation data. It should include 
methylation values for CpG sites and associated metadata.}

\item{tiles}{A data frame or vector containing the region boundaries or "tiles" that correspond to CpG sites in 
the `meth` data.}

\item{...}{Additional parameters passed to the `compute_regions_distance` function, such as `doplot` for optional 
plotting of the region distances. This allows for flexibility in passing arguments to the distance 
computation function.}
}
\value{
A list with two elements:
\itemize{
  \item `regions_cpgs_consecutive`: A data frame or data.table of consecutive CpG regions identified in the 
                                    methylation data.
  \item `pairs_region_summary`: A summary data frame or list containing the computed distances between adjacent 
                               regions, based on the provided tiles.
}
}
\description{
This function identifies and investigates adjacent regions in methylation data. It maps CpG sites to regions, 
identifies consecutive regions, and computes the distances between adjacent regions. The function returns a summary 
of adjacent regions with optional plotting for distance computation.
}
\details{
This function first maps CpG sites in the `filtered_meth_control` data to regions using the provided `tiles`. 
Then, it identifies consecutive regions and computes distances between adjacent regions using the `compute_regions_distance` 
function. The results are returned as a list containing:
- A `regions_cpgs_consecutive` data frame with identified consecutive regions.
- A `pairs_region_summary` summary containing the distance metrics between adjacent regions.

You can provide additional parameters to `compute_regions_distance` using the `...` argument (e.g., for plotting).
}
