% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handling_consecutive_regions.R
\name{pull_regions_together}
\alias{pull_regions_together}
\title{Merge Regions Based on Distance}
\usage{
pull_regions_together(regions_pairs_ofi, dimension_region)
}
\arguments{
\item{regions_pairs_ofi}{A data frame containing pairs of regions. Each pair is represented as a column `region_pairs` which contains a string in the format "region1;region2". Additional columns `A` and `B` represent the start and end positions of the first region.}

\item{dimension_region}{A numeric value specifying the distance to extend the new merged region, starting from the first CpG position (`A`) of the region.}
}
\value{
A data frame containing the merged regions with columns:
\describe{
  \item{chr}{Chromosome of the merged region.}
  \item{start}{Start position of the merged region.}
  \item{end}{End position of the merged region, calculated as `start + dimension_region`.}
  \item{region_id}{A unique identifier for the merged region, formatted as "chr:start-end".}
}
}
\description{
This function merges two adjacent regions based on the distance specified by the `dimension_region` parameter. The function takes a data frame containing region pairs and merges them by adjusting the starting and ending positions to create new regions that span the distance from the first CpG in the pair to the end of the region defined by `dimension_region`.
}
\details{
This function is used to combine two regions into one based on their proximity and a specified distance threshold. The merging occurs by starting at the first CpG position (`A`) of the first region and extending the region to a new end position defined by `dimension_region`. This is useful when adjacent regions are to be considered as a single larger region for further analysis.
}
\examples{
# Example data frame with region pairs
regions_pairs_ofi <- data.frame(region_pairs = c("chr1:100-200;chr1:201-300", "chr2:500-600;chr2:601-700"),
                                A = c(100, 500),
                                B = c(200, 600))
# Merge the regions with a specified dimension
merged_regions <- pull_regions_together(regions_pairs_ofi, dimension_region = 50)

}
