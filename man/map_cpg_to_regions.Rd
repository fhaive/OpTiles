% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpg_and_gene_annotation.R
\name{map_cpg_to_regions}
\alias{map_cpg_to_regions}
\title{Map CpG Sites to Genomic Regions}
\usage{
map_cpg_to_regions(methdf, region)
}
\arguments{
\item{methdf}{A `data.frame` or `MethylBase` object with methylation data. Must include the columns \code{chr}, \code{start}, and \code{end}
indicating the chromosome and coordinates of each CpG site.}

\item{region}{A `data.frame` or `MethylBase` object with genomic regions. Must include the columns \code{chr}, \code{start}, and \code{end}.}
}
\value{
A `data.frame` containing the CpGs that overlap each region, including:
\describe{
  \item{`region_id`}{Region identifier in the format \code{"chr:start-end"}.}
  \item{`chr`, `start`, `end`}{Genomic coordinates of the CpG site.}
}
}
\description{
This function maps CpG sites to user-defined genomic regions and returns all overlapping CpG-to-region mappings.
}
\details{
The function:
\enumerate{
  \item Converts CpG and region data into `GRanges` objects.
  \item Identifies overlaps using \code{\link[GenomicRanges]{findOverlaps}}.
  \item Returns a unique list of CpG-to-region mappings.
}
}
\examples{
\dontrun{
methdf <- data.frame(chr = "1", start = c(100, 150, 250), end = c(100, 150, 250))
region <- data.frame(chr = "1", start = c(90, 200), end = c(160, 300))
map_cpg_to_regions(methdf, region)
}

}
