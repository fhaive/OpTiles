% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handling_consecutive_regions.R
\name{merge_regions_optimal_density}
\alias{merge_regions_optimal_density}
\title{Merge Regions Based on Optimal CpG Density}
\usage{
merge_regions_optimal_density(
  regions_pairs_ofi,
  regions_cpgs,
  dimension_region
)
}
\arguments{
\item{regions_pairs_ofi}{A data frame containing pairs of regions, represented as strings in the `region_pairs` column (e.g., "region1;region2"). Additional columns `first` and `second` represent the start positions of the first region in each pair.}

\item{regions_cpgs}{A data frame containing CpG information, with a column `region_id` corresponding to the region identifiers from `regions_pairs_ofi`.}

\item{dimension_region}{A numeric value specifying the window size (in base pairs) for computing CpG density within each region.}
}
\value{
A data frame containing the merged regions with the highest CpG density, with the following columns:
\describe{
  \item{chr}{Chromosome of the merged region.}
  \item{start}{Start position of the merged region.}
  \item{end}{End position of the merged region, calculated as the start position plus `dimension_region`.}
  \item{region_id}{A unique identifier for the merged region, formatted as "chr:start-end".}
}
}
\description{
This function merges adjacent regions by computing the CpG density within each region pair. The merge is performed in such a way that the resulting merged regions have the highest CpG density within a specified window (`dimension_region`).
}
\details{
This function merges two regions from a region pair based on their CpG density. First, it extracts the CpG data for both regions in each pair and computes the CpG density over a window defined by `dimension_region`. Then, it merges the regions with the highest CpG density and returns the resulting merged regions.

The function works by splitting the region pairs and calculating the CpG density for each pair. It then selects the regions with the highest density and merges them into a single region.
}
\examples{
# Example data frame with region pairs
regions_pairs_ofi <- data.frame(region_pairs = c("chr1:100-200;chr1:201-300", "chr2:500-600;chr2:601-700"),
                                first = c("chr1:100-200", "chr2:500-600"),
                                second = c("chr1:201-300", "chr2:601-700"))

# Example CpG data
regions_cpgs <- data.frame(region_id = c("chr1:100-200", "chr1:201-300", "chr2:500-600", "chr2:601-700"),
                           cpg_count = c(50, 60, 30, 40), 
                           stringsAsFactors = FALSE)

# Merge regions with optimal CpG density
merged_regions <- merge_regions_optimal_density(regions_pairs_ofi, regions_cpgs, dimension_region = 300)

}
